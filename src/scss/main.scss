body,
html,
.main {
  min-height: 100vh;
  margin: 0;
}

img {
  user-select: none;
  -moz-user-select: none;
  -webkit-user-drag: none;
  -webkit-user-select: none;
  -ms-user-select: none;
}

.main {
  transition: background-color 200ms;
  display: flex;
  flex-direction: column;
}

.main.dark {
  background-color: rgb(40, 40, 102);
}

.main.light {
  background-color: burlywood;
}

.header {
  display: flex;
  align-items: center;
  justify-content: flex-end;
  padding: 15px;
}

.theme-toggle {
  height: 50px;
  width: 50px;
  display: grid;
  place-items: center;
  cursor: pointer;
}

.theme-toggle > img {
  display: block;
  max-height: 100%;
  max-width: 100%;
}

.theme-toggle.dark > img {
  filter: brightness(1) invert(1);
  height: 90%;
}

.theme-toggle.light > img {
  filter: brightness(0) invert(1);
}

.grid {
  margin: 50px;
  display: flex;
  overflow-y: auto;
  max-width: calc(100vw - 100px);
}

.grid.dark {
  background-color: rgb(61, 61, 141);
}

.sound-types {
  display: flex;
  flex-direction: column;
  cursor: pointer;
}

.sound-types > * {
  filter: brightness(0) invert(1);
}

.grid,
.sound-types,
.sound-types > img,
.squares > .square-row > .square {
  outline: 2px solid white;
}

.sound-types > * {
  height: 50px;
  padding: 15px;
}

.squares {
  flex-grow: 1;
}

.square-row {
  height: 80px;
  display: flex;
}

.square {
  width: 80px;
  height: 80px;
  cursor: pointer;
}

.squares.light > .square-row > .square.active {
  background-color: white;
}

.square.active {
  background-color: white;
}

.controls {
  display: flex;
  justify-content: flex-start;
  margin: 0px 50px;
  gap: 25px;
}

.plus-container,
.minus-container,
.play-pause-container {
  padding: 15px;
  border: 2px solid white;
  border-radius: 100px;
  cursor: pointer;
  display: grid;
  place-items: center;
}

.plus-container > img,
.minus-container > img,
.play-pause-container > img {
  height: 25px;
}

.controls > .plus-container > img,
.controls > .minus-container > img,
.controls > .play-pause-container > img {
  filter: brightness(1) invert(1);
}